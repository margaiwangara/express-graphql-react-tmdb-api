{"version":3,"sources":["components/Navbar.js","components/Content.js","graphql/queries.js","components/Movie.js","components/Movies.js","components/Popular.js","components/Upcoming.js","components/TopRated.js","components/NowShowing.js","components/MovieDetails.js","App.js","index.js"],"names":["navbarToggle","e","preventDefault","dropdown","document","querySelector","classList","contains","remove","add","Navbar","className","to","onClick","icon","faBars","size","Content","children","MOVIE_DETAILS_QUERY","gql","POPULAR_MOVIES","NOW_PLAYING","UPCOMING","TOP_RATED","Movie","data","id","original_title","poster_path","vote_count","vote_average","imagePath","src","alt","faPoll","Movies","props","movies","results","map","movie","key","title","Popular","useQuery","loading","error","console","log","popular","Upcoming","upcoming","TopRated","top_rated","NowShowing","now_playing","MovieDetails","movie_id","match","params","parseInt","variables","homepage","genres","release_date","runtime","overview","genreList","container","i","length","name","formatGenre","parse","format","runTimeInMins","rtHrs","Math","floor","rtMins","formatRuntime","href","client","ApolloClient","uri","App","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b2de7c55.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction navbarToggle(e) {\r\n  e.preventDefault();\r\n  // get nav-items\r\n  const dropdown = document.querySelector(\".nav-items\");\r\n\r\n  // check if contains active class\r\n  if (dropdown.classList.contains(\"active\")) {\r\n    dropdown.classList.remove(\"active\");\r\n  } else {\r\n    dropdown.classList.add(\"active\");\r\n  }\r\n}\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <Link to=\"/\" className=\"navbar-brand text-white\">\r\n        24/7\r\n      </Link>\r\n\r\n      <Link to=\"/\" className=\"toggler text-white\" onClick={navbarToggle}>\r\n        <FontAwesomeIcon icon={faBars} size=\"2x\" />\r\n      </Link>\r\n\r\n      <ul className=\"nav-items\">\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/movie/popular\" className=\"nav-link text-white\">\r\n            Popular\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/movie/now-showing\" className=\"nav-link text-white\">\r\n            In Theatres\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/movie/top-rated\" className=\"nav-link text-white\">\r\n            Top Rated\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/movie/upcoming\" className=\"nav-link text-white\">\r\n            Upcoming\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Content({ children }) {\r\n  return <div className=\"content\">{children}</div>;\r\n}\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const MOVIE_DETAILS_QUERY = gql`\r\n  query MovieDetailsQuery($movie_id: Int!) {\r\n    movie(movie_id: $movie_id) {\r\n      original_title\r\n      overview\r\n      poster_path\r\n      release_date\r\n      runtime\r\n      id\r\n      vote_count\r\n      vote_average\r\n      homepage\r\n      popularity\r\n      genres {\r\n        id\r\n        name\r\n      }\r\n      imdb_id\r\n    }\r\n  }\r\n`;\r\nexport const POPULAR_MOVIES = gql`\r\n  query PopularMovies {\r\n    popular {\r\n      results {\r\n        id\r\n        original_title\r\n        poster_path\r\n        vote_count\r\n        vote_average\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NOW_PLAYING = gql`\r\n  query NowPlaying {\r\n    now_playing {\r\n      results {\r\n        id\r\n        original_title\r\n        poster_path\r\n        vote_count\r\n        vote_average\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPCOMING = gql`\r\n  query Upcoming {\r\n    upcoming {\r\n      results {\r\n        id\r\n        original_title\r\n        poster_path\r\n        vote_count\r\n        vote_average\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TOP_RATED = gql`\r\n  query TopRated {\r\n    top_rated {\r\n      results {\r\n        id\r\n        original_title\r\n        poster_path\r\n        vote_count\r\n        vote_average\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPoll } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Movie({ data }) {\r\n  const { id, original_title, poster_path, vote_count, vote_average } = data;\r\n  let imagePath = `https://image.tmdb.org/t/p/w500/${poster_path}`;\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-top\">\r\n        <figure>\r\n          <Link to={`/${id}`}>\r\n            <img src={imagePath} alt={original_title} />\r\n          </Link>\r\n        </figure>\r\n      </div>\r\n      <div className=\"card-bottom\">\r\n        <h5 className=\"h5 text-white\">\r\n          <Link to={`/${id}`} className=\"text-white\">\r\n            {original_title}\r\n          </Link>\r\n        </h5>\r\n        <h6 className=\"h6 text-white-o\">\r\n          <FontAwesomeIcon icon={faPoll} />\r\n          {\" \" + vote_average + \" / \" + vote_count}\r\n        </h6>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// components\r\nimport Movie from \"./Movie\";\r\n\r\nexport default function Movies(props) {\r\n  const movies = props.data.results.map(movie => (\r\n    <Movie key={movie.id} data={movie} />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"movies\">\r\n      <h3 className=\"h3 text-white\">{props.title}</h3>\r\n      <div className=\"inner-row\">{movies}</div>;\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { POPULAR_MOVIES } from \"../graphql/queries\";\r\n\r\n// components\r\nimport Movies from \"./Movies\";\r\n\r\nexport default function Popular() {\r\n  const { loading, error, data } = useQuery(POPULAR_MOVIES);\r\n\r\n  if (loading)\r\n    return (\r\n      <div className=\"loading\">\r\n        <p>Loading...</p>\r\n      </div>\r\n    );\r\n\r\n  if (error) console.log(error);\r\n\r\n  return <Movies title=\"Popular\" data={data.popular} />;\r\n}\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport { UPCOMING } from \"../graphql/queries\";\r\n\r\n// components\r\nimport Movies from \"./Movies\";\r\n\r\nexport default function Upcoming() {\r\n  const { loading, error, data } = useQuery(UPCOMING);\r\n\r\n  if (loading) return <div className=\"loading\">Loading...</div>;\r\n\r\n  if (error) console.log(error);\r\n\r\n  return <Movies title=\"Upcoming\" data={data.upcoming} />;\r\n}\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport { TOP_RATED } from \"../graphql/queries\";\r\n\r\n// components\r\nimport Movies from \"./Movies\";\r\n\r\nexport default function TopRated() {\r\n  const { loading, error, data } = useQuery(TOP_RATED);\r\n\r\n  if (loading) return <div className=\"loading\">Loading...</div>;\r\n\r\n  if (error) console.log(error);\r\n\r\n  return <Movies title=\"Top Rated\" data={data.top_rated} />;\r\n}\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport { NOW_PLAYING } from \"../graphql/queries\";\r\n\r\n// components\r\nimport Movies from \"./Movies\";\r\n\r\nexport default function NowShowing() {\r\n  const { loading, error, data } = useQuery(NOW_PLAYING);\r\n\r\n  if (loading) return <div className=\"loading\">Loading...</div>;\r\n\r\n  if (error) console.log(error);\r\n\r\n  return <Movies title=\"In Theatres\" data={data.now_playing} />;\r\n}\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport Moment from \"react-moment\";\r\n\r\nimport { MOVIE_DETAILS_QUERY } from \"../graphql/queries\";\r\n\r\nfunction formatGenre(genreList) {\r\n  let container = \"\";\r\n\r\n  for (let i = 0; i < genreList.length; i++) {\r\n    container +=\r\n      i !== genreList.length - 1 ? `${genreList[i].name}, ` : genreList[i].name;\r\n  }\r\n\r\n  return container;\r\n}\r\n\r\nfunction formatRuntime(runTimeInMins) {\r\n  // 60 mins = 1hr\r\n  const rtHrs = Math.floor(runTimeInMins / 60);\r\n  const rtMins = runTimeInMins % 60;\r\n\r\n  // check if rthrs == 0\r\n  if (rtHrs === 0) return `${runTimeInMins}mins`;\r\n\r\n  let container = rtHrs > 1 ? `${rtHrs}hrs ` : `${rtHrs}hr `;\r\n  container +=\r\n    rtMins === 0 ? \"\" : rtMins > 1 ? `${rtMins}min` : `${rtMins}mins`;\r\n  return container;\r\n}\r\n\r\nexport default function MovieDetails(props) {\r\n  let { movie_id } = props.match.params;\r\n  movie_id = parseInt(movie_id);\r\n  const { loading, error, data } = useQuery(MOVIE_DETAILS_QUERY, {\r\n    variables: { movie_id }\r\n  });\r\n\r\n  if (loading) return <div className=\"loading\">Loading...</div>;\r\n  if (error) console.log(error);\r\n\r\n  const {\r\n    original_title,\r\n    homepage,\r\n    genres,\r\n    release_date,\r\n    runtime,\r\n    overview,\r\n    poster_path\r\n  } = data.movie;\r\n\r\n  let imagePath = `https://image.tmdb.org/t/p/w500/${poster_path}`;\r\n  return (\r\n    <div className=\"details\">\r\n      <div className=\"details-top\">\r\n        <figure>\r\n          <img src={imagePath} alt=\"movie-poster\" />\r\n        </figure>\r\n        <h3 className=\"h3\">{original_title}</h3>\r\n        <div className=\"content-group\">\r\n          <h5 className=\"h5\">Category</h5>\r\n          <p>{formatGenre(genres)}</p>\r\n        </div>\r\n        <div className=\"content-group\">\r\n          <h5 className=\"h5\">Release Date</h5>\r\n          <p>\r\n            <Moment parse=\"YYYY-MM-DD\" format=\"LL\">\r\n              {release_date}\r\n            </Moment>\r\n          </p>\r\n        </div>\r\n        <div className=\"content-group\">\r\n          <h5 className=\"h5\">Runtime</h5>\r\n          <p>{formatRuntime(runtime)}</p>\r\n        </div>\r\n        <div className=\"content-group\">\r\n          <h5 className=\"h5\">Homepage</h5>\r\n          <p>\r\n            <a href={`${homepage}`}>{homepage}</a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"details-bottom\">\r\n        <h3 className=\"h3\">Storyline</h3>\r\n        <p>{overview}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\n// components\r\nimport Navbar from \"./components/Navbar\";\r\nimport Content from \"./components/Content\";\r\nimport Popular from \"./components/Popular\";\r\nimport Upcoming from \"./components/Upcoming\";\r\nimport TopRated from \"./components/TopRated\";\r\nimport NowShowing from \"./components/NowShowing\";\r\nimport MovieDetails from \"./components/MovieDetails\";\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"/graphql\"\r\n});\r\n\r\nconst App = () => (\r\n  <ApolloProvider client={client}>\r\n    <Router>\r\n      <div className=\"wrapper\">\r\n        <Navbar />\r\n        <Content>\r\n          <Route exact path=\"/\" component={NowShowing} />\r\n          <Route exact path=\"/movie/popular\" component={Popular} />\r\n          <Route exact path=\"/movie/upcoming\" component={Upcoming} />\r\n          <Route exact path=\"/movie/top-rated\" component={TopRated} />\r\n          <Route exact path=\"/movie/now-showing\" component={NowShowing} />\r\n          <Route exact path=\"/:movie_id\" component={MovieDetails} />\r\n        </Content>\r\n      </div>\r\n    </Router>\r\n  </ApolloProvider>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}