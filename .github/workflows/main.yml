name: Sinema Web Application
on:
  push:
    branches: develop

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set node version
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: üìÅ Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock' )}}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install client dependencies
        run: |
          cd frontend
          yarn install --prefer-offline

      - name: üî® Build client project
        run: |
          mkdir public
          cd frontend
          npm run build --if-present
        env:
          CI: false

      - name: List output files
        run: find public/ -print

      - name: Store build files as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: frontend/build/

  deploy:
    needs: [build]
    name: üöÄ Deploy app to ftp server
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Create public directory in workspace
        run: mkdir public

      - name: Fetch build from artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: public

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: public

      - uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: '.,!frontend,!node_modules'
          target: ${{ secrets.TARGET_DIR }}
          strip_components: 1
          overwrite: true

      # - uses: SamKirkland/FTP-Deploy-Action@4.1.0
      #   with:
      #     server: '${{ secrets.FTP_SERVER }}'
      #     username: '${{ secrets.FTP_USERNAME }}'
      #     password: '${{ secrets.FTP_PASSWORD }}'
      #     protocol: ftps
      #     port: 21
      #     local-dir: build/
      #     server-dir: portfolio/
